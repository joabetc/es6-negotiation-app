{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","obj","data","quantidade","valor","catch","err","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","negociacao","getConnection","connection","dao","add","error","conneciton","listAll","deleteAll","currentList","obterNegociacoes","filter","some","isEquals","negociacaoExitente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\r\nimport { ConnectionFactory } from './ConnectionFactory';\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\r\nimport { Negociacao } from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n  constructor() {\r\n    this._http = new HttpService();\r\n  }\r\n\r\n  obterNegociacoesDaSemana() {\r\n\r\n    return this._http\r\n      .get('negociacoes/semana')\r\n      .then(negociacoes => {\r\n        console.log(negociacoes);\r\n        return negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor))\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error('Não foi possível obter as negociações da semana.');\r\n      });\r\n  }\r\n\r\n  obterNegociacoesDaSemanaAnterior() {\r\n\r\n    return this._http\r\n      .get('negociacoes/anterior')\r\n      .then(negociacoes => {\r\n        console.log(negociacoes);\r\n        return negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error('Não foi possível obter as negociações da semana anterior.');\r\n      });\r\n  }\r\n\r\n  obterNegociacoesDaSemanaRetrasada() {\r\n\r\n    return this._http\r\n      .get('negociacoes/retrasada')\r\n      .then(negociacoes => {\r\n        console.log(negociacoes);\r\n        return negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error('Não foi possível obter as negociações da semana retrasada.');\r\n      });\r\n  }\r\n\r\n  obterNegociacoes() {\r\n    return Promise.all([\r\n      this.obterNegociacoesDaSemana(),\r\n      this.obterNegociacoesDaSemanaAnterior(),\r\n      this.obterNegociacoesDaSemanaRetrasada()\r\n    ]).then(periodos => {\r\n      let negociacoes = periodos.reduce(\r\n        (dados, periodo) => dados.concat(periodo), []);\r\n        return negociacoes;\r\n    }).catch(err => {\r\n      throw new Error(err);\r\n    });\r\n  }\r\n\r\n  add(negociacao) {\r\n    return ConnectionFactory\r\n    .getConnection()\r\n    .then(connection => new NegociacaoDao(connection))\r\n    .then(dao => dao.add(negociacao))\r\n    .then(() => 'Negociação adicionada com sucesso')\r\n    .catch(error => {\r\n      console.log(error);\r\n      throw new Error('Não foi possível adicionar a negociação');\r\n    });\r\n  }\r\n\r\n  list() {\r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(conneciton => new NegociacaoDao(conneciton))\r\n      .then(dao => dao.listAll())\r\n      .catch(error => {\r\n        console.log(error);\r\n        throw new Error('Não foi possível obter as negociações');\r\n      })\r\n  }\r\n\r\n  delete() {\r\n    return ConnectionFactory\r\n    .getConnection()\r\n    .then(connection => new NegociacaoDao(connection))\r\n    .then(dao => dao.deleteAll())\r\n    .then(() => 'Negociações apagadas com sucesso')\r\n    .catch(error => {\r\n      console.log(error);\r\n      throw new Error('Não foi possível apagar as negociações');\r\n    });\r\n  }\r\n\r\n  import(currentList) {\r\n    return this.obterNegociacoes()\r\n    .then(negociacoes => \r\n      negociacoes.filter(negociacao => \r\n        !currentList.some(negociacaoExitente => \r\n          negociacao.isEquals(negociacaoExitente)))\r\n    )\r\n    .catch(error => {\r\n      console.log(error);\r\n      throw new Error('Não foi possível buscar negociações para importar');\r\n    });\r\n  }\r\n\r\n}"]}