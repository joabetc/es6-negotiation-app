{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,gB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;+BAEIC,a;AAEX,+BAAYC,UAAZ,EAAwB;AAAA;;AACtB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AACD;;;;8BAEGC,U,EAAY;AAAA;;AACd,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,kBAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;;AAKAI,sBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,eAFD;;AAIAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,yCAAP;AACD,eAHD;AAKD,aAhBM,CAAP;AAkBD;;;oCAES;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,kBAAIY,SAAS,OAAKjB,WAAL,CACVO,WADU,CACE,CAAC,OAAKN,MAAN,CADF,EACiB,WADjB,EAEVO,WAFU,CAEE,OAAKP,MAFP,EAGViB,UAHU,EAAb;AAIA,kBAAIC,cAAc,EAAlB;;AAEAF,qBAAOP,SAAP,GAAmB,aAAK;AACtB,oBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oBAAID,KAAJ,EAAW;AACT,sBAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,8BAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAP,wBAAMQ,QAAN;AACD,iBAND,MAMO;AACLxB,0BAAQe,WAAR;AACD;AACF,eAZD;;AAcAF,qBAAON,OAAP,GAAiB,aAAK;AACpBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,wCAAP;AACD,eAHD;AAID,aA1BM,CAAP;AA2BD;;;sCAEW;AAAA;;AACV,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX4B,KAHW,EAAd;;AAKAvB,sBAAQI,SAAR,GAAoB;AAAA,uBAAKN,QAAQ,iCAAR,CAAL;AAAA,eAApB;;AAEAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,wCAAP;AACD,eAHD;AAID,aAZM,CAAP;AAaD","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoDao {\n\n  constructor(connection) {\n    this._connection = connection;\n    this._store = 'negociacoes';\n  }\n\n  add(negociacao) {\n    return new Promise((resolve, reject) => {\n\n      let request = this._connection\n        .transaction([this._store], 'readwrite')\n        .objectStore(this._store)\n        .add(negociacao);\n\n      request.onsuccess = e => {\n        resolve();\n      };\n\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject('Não foi possível adicionar a negociação');\n      };\n      \n    });\n\n  }\n\n  listAll() {\n    return new Promise((resolve, reject) => {\n\n      let cursor = this._connection\n        .transaction([this._store], 'readwrite')\n        .objectStore(this._store)\n        .openCursor();\n      let negociacoes = [];\n      \n      cursor.onsuccess = e => {\n        let atual = e.target.result;\n\n        if (atual) {\n          var dado = atual.value;\n\n          negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n          atual.continue();\n        } else {\n          resolve(negociacoes);\n        }\n      };\n\n      cursor.onerror = e => {\n        console.log(e.target.error);\n        reject('Não foi possível listar as negociações')\n      };\n    });\n  }\n\n  deleteAll() {\n    return new Promise((resolve, reject) => {\n      let request = this._connection\n        .transaction([this._store], 'readwrite')\n        .objectStore(this._store)\n        .clear();\n      \n      request.onsuccess = e => resolve('Negociação apagadas com sucesso');\n\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject('Não foi possível apagar as negociações');\n      }\n    })\n  }\n}"]}